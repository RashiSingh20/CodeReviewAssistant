{"ast":null,"code":"var _jsxFileName = \"C:\\\\ustcode\\\\my-react-file-upload-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport FileList from './components/FileList';\nimport './styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [reviewResult, setReviewResult] = useState('');\n  const [reviewMessage, setReviewMessage] = useState(''); // State to store the review status message\n\n  // Function to handle file uploads\n  const handleFileUpload = newFiles => {\n    setFiles(prevFiles => [...prevFiles, ...newFiles]); // Append new files to the existing list\n  };\n\n  // Function to handle code review\n  const handleCodeReview = async file => {\n    const reader = new FileReader();\n    reader.onload = async event => {\n      const fileContent = event.target.result;\n\n      // Azure OpenAI API details\n      const endpoint = \"https://ragdemo010.openai.azure.com\";\n      const apiKey = \"1fdjJbIEYDvpFzDnTckMJVRNmGtPnNr4qoHDehaHNX8qn1I5vB2RJQQJ99BCACYeBjFXJ3w3AAABACOGK7WH\";\n      const deploymentName = \"gpt-4o\";\n      try {\n        setReviewMessage('Reviewing the code...'); // Set a message indicating the review is in progress\n\n        const response = await fetch(`${endpoint}/openai/deployments/${deploymentName}/chat/completions?api-version=2025-01-01-preview`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'api-key': apiKey\n          },\n          body: JSON.stringify({\n            messages: [{\n              role: \"system\",\n              content: \"You are a helpful assistant that reviews code for errors and improvements.\"\n            }, {\n              role: \"user\",\n              content: `Review the following code:\\n\\n${fileContent}`\n            }],\n            max_tokens: 1000\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Azure OpenAI API error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setReviewResult(data.choices[0].message.content); // Display the review result in the UI\n        setReviewMessage('Code review completed successfully!'); // Set a success message\n      } catch (error) {\n        console.error(\"Error during code review:\", error);\n        setReviewMessage('Failed to perform code review. Please check the console for details.'); // Set an error message\n      }\n    };\n    reader.readAsText(file); // Read the file content as text\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Upload and Code Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onFileUpload: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {\n      files: files,\n      onCodeReview: handleCodeReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), reviewMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reviewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), reviewResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Code Review Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: reviewResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vpEsCP/3IH7Ks9d1+LelRKzPTS0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","FileList","jsxDEV","_jsxDEV","App","_s","files","setFiles","reviewResult","setReviewResult","reviewMessage","setReviewMessage","handleFileUpload","newFiles","prevFiles","handleCodeReview","file","reader","FileReader","onload","event","fileContent","target","result","endpoint","apiKey","deploymentName","response","fetch","method","headers","body","JSON","stringify","messages","role","content","max_tokens","ok","Error","statusText","data","json","choices","message","error","console","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","onCodeReview","_c","$RefreshReg$"],"sources":["C:/ustcode/my-react-file-upload-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport FileList from './components/FileList';\nimport './styles/styles.css';\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [reviewResult, setReviewResult] = useState('');\n  const [reviewMessage, setReviewMessage] = useState(''); // State to store the review status message\n\n  // Function to handle file uploads\n  const handleFileUpload = (newFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]); // Append new files to the existing list\n  };\n\n  // Function to handle code review\n  const handleCodeReview = async (file) => {\n    const reader = new FileReader();\n\n    reader.onload = async (event) => {\n      const fileContent = event.target.result;\n\n      // Azure OpenAI API details\n      const endpoint = \"https://ragdemo010.openai.azure.com\";\n      const apiKey = \"1fdjJbIEYDvpFzDnTckMJVRNmGtPnNr4qoHDehaHNX8qn1I5vB2RJQQJ99BCACYeBjFXJ3w3AAABACOGK7WH\";\n      const deploymentName = \"gpt-4o\";\n\n      try {\n        setReviewMessage('Reviewing the code...'); // Set a message indicating the review is in progress\n\n        const response = await fetch(`${endpoint}/openai/deployments/${deploymentName}/chat/completions?api-version=2025-01-01-preview`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'api-key': apiKey,\n          },\n          body: JSON.stringify({\n            messages: [\n              {\n                role: \"system\",\n                content: \"You are a helpful assistant that reviews code for errors and improvements.\",\n              },\n              {\n                role: \"user\",\n                content: `Review the following code:\\n\\n${fileContent}`,\n              },\n            ],\n            max_tokens: 1000,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error(`Azure OpenAI API error: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        setReviewResult(data.choices[0].message.content); // Display the review result in the UI\n        setReviewMessage('Code review completed successfully!'); // Set a success message\n      } catch (error) {\n        console.error(\"Error during code review:\", error);\n        setReviewMessage('Failed to perform code review. Please check the console for details.'); // Set an error message\n      }\n    };\n\n    reader.readAsText(file); // Read the file content as text\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>File Upload and Code Review</h1>\n      <FileUpload onFileUpload={handleFileUpload} />\n      <FileList files={files} onCodeReview={handleCodeReview} />\n\n      {/* Display the review status message */}\n      {reviewMessage && (\n        <div className=\"review-message\">\n          <p>{reviewMessage}</p>\n        </div>\n      )}\n\n      {/* Display the code review result */}\n      {reviewResult && (\n        <div className=\"review-result\">\n          <h2>Code Review Result:</h2>\n          <pre>{reviewResult}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}